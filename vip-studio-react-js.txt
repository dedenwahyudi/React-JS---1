CARA INSTALL REACT JS :
   1. download & install node.js
   2. download & install vite.js (react murni)
   3. - terminal : npm create vite@latest my-react-app -- --template react
      - terminal : cd my-react-app
      - terminal : npm install
      - terminal : npm run dev
----------------------------------------------------------------------------------------------------------------------
CARA INSTALL TAILWIND CDD DI DALAM REACT JS :
   1. Buka link tailwind css : https://tailwindcss.com/
   2. Masuk ke menu Docs > Framework Guides
   3. Pilih Vite
   4. terminal : npm install -D tailwindcss postcss autoprefixer
      terminal : npx tailwindcss init -p
                 - otomatis akan meng-generate file (postcss.config.js dan tailwind.config.cjs)
   5. Buka file tailwind.config.cjs, lalu replace baris content menjadi :
      - content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"]
   6. Buka file src/index.css.
      Hapus code yang ada, kemudian paste code berikut ini :
         @tailwind base;
         @tailwind components;
         @tailwind utilities;
   7. Delete file src/App.css
   8. Buka file scr/App.jcs,
      Hapus baris : import "./App.css";
   9. terminal : npm run dev
   10. Selesai
----------------------------------------------------------------------------------------------------------------------
EKSTENSI VS CODE :
   1. Codeium : AI Coding Autocomplete and Chat for Python, Javascript, Typescript, Java, Go, and more
----------------------------------------------------------------------------------------------------------------------
COMPONENTS :
Buat struktur folder didalam directory "src" :
   1. atoms (rename)=> Elements
      => element kecil seperti button, input, label dll
   2. molecules (delete)
      => element yang terdiri dari beberapa bagian seperti input yang lengkap dengan label
   3. organisms (rename)=> Fragments
      => form
   4. templates (rename)=> Layouts
   5. pages
      => untuk pages simpan didalam directory "src/pages"
----------------------------------------------------------------------------------------------------------------------
REACT ROUTER (LIBRARY) :
Link Dokumentasi : https://reactrouter.com/en/main

Cara Install Library React Router :
   1. terminal : npm install react-router-dom
   2. tunggu sampai selesai mendownload
   3. import baris kode berikut ini didalam halaman utama (main.jsx) :
      import { createBrowserRouter, RouterProvider } from "react-router-dom";
   4. contoh sourcode yang sudah menerapkan react router untuk berpindah halaman (main.jsx) :

	import { createBrowserRouter, RouterProvider } from "react-router-dom";
	import LoginPage from "./pages/login.jsx";
	import RegisterPage from "./pages/register.jsx";
	import ErrorPage from "./pages/404.jsx";

	const router = createBrowserRouter([
  	   {
    	     path: "/",
    	     element: <div>Hello World!</div>,
    	     errorElement: <ErrorPage />,
  	   },
  	   {
    	     path: "/login",
    	     element: <LoginPage />,
  	   },
  	   {
    	     path: "/register",
    	     element: <RegisterPage />,
  	   },
	]);

	ReactDOM.createRoot(document.getElementById("root")).render(
  	   <React.StrictMode>
    	     <RouterProvider router={router} />
  	   </React.StrictMode>
	);

   5. ErrorPage, ketika halaman yang di akses tidak ada (404.jsx) :

	import { useRouteError } from "react-router-dom";

	const ErrorPage = () => {
  	   const error = useRouteError();

  	   return (
    	      <div className="flex justify-center min-h-screen items-center flex-col">
      	        <h1 className="text-3xl font-bold">Oops!</h1>
      	        <p className="my-5 text-xl">Sorry, an unexpected error has occured</p>
      	        <p className="text-lg">{error.statusText || error.message}</p>
    	       </div>
  	   );
	};

	export default ErrorPage;

CLIENT SIDE ROUTING :
Ini berfungsi ketika kita berpindah URL, tidak perlu meminta dokumen lain dari server (tanpa melakukan loading) :

   1. sourcode link to Register :
	import { Link } from "react-router-dom";

        Dont't have an account?{" "}
        <Link to="/register" className="font-bold text-blue-600">
          Register
        </Link>

   2. sourcode link to Login:
	import { Link } from "react-router-dom";

        Have an account?{" "}
        <Link to="/login" className="font-bold text-blue-600">
          Login
        </Link>
----------------------------------------------------------------------------------------------------------------------
CONDITIONAL RENDERING :
   1. studi kasus : misalkan kita memiliki komponen, mungkin saja komponen yang sama, tetapi ingin menampilkan
		    hal yang berbeda dengan kondisi tertentu.

   2. menggunakan ternary operator dan && :
      <p className="text-sm mt-5 text-center">
        {type === "login"
          ? "Dont't have an account? "
          : "Already have an account? "}

        {type === "login" && (
          <Link to="/register" className="font-bold text-blue-600">
            Register
          </Link>
        )}
        {type === "register" && (
          <Link to="/login" className="font-bold text-blue-600">
            Login
          </Link>
        )}
      </p>

   3. menggunakan If Statement :
      const Navigation = ({ type }) => {
        if (type === "login") {
          return (
            <p className="text-sm mt-5 text-center">
              Dont't have an account?{" "}
              <Link to="/register" className="font-bold text-blue-600">
                Register
              </Link>
            </p>
          );
        } else {
          return (
            <p className="text-sm mt-5 text-center">
              Already have an account?{" "}
              <Link to="/login" className="font-bold text-blue-600">
                Login
              </Link>
            </p>
          );
        }
      };
----------------------------------------------------------------------------------------------------------------------
NESTED COMPONENT :
Komponen yang berada didalam sebuah komponen.
Contoh : Ketika kita memiliki <AuthLayout />, kemudian didalam <AuthLayout /> kita punya sebuah komponen lagi yaitu
	 <FormLogin />

----------------------------------------------------------------------------------------------------------------------
NESTED COMPONENT :
Komponen yang berada didalam sebuah komponen.
Contoh : Ketika kita memiliki <AuthLayout />, kemudian didalam <AuthLayout /> kita punya sebuah komponen lagi yaitu
	 <FormLogin />
----------------------------------------------------------------------------------------------------------------------
RENDERING LIST :

import CardProduct from "../components/Fragments/CardProduct";

const products = [
  {
    id: 1,
    name: "Sepatu Baru",
    price: "Rp 1.000.000",
    image: "/public/images/shoes-1.jpg",
    description: `Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis eveniet
    soluta numquam sapiente voluptatum labore, suscipit repellat. Quasi
    hic, labore quidem, esse mollitia laborum est, asperiores facilis
    repellat explicabo omnis?`,
  },
  {
    id: 2,
    name: "Sepatu Lama",
    price: "Rp 500.000",
    image: "/public/images/shoes-1.jpg",
    description: `Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis eveniet
    soluta numquam sapiente voluptatum labore.`,
  },
  {
    id: 3,
    name: "Sepatu Adadong",
    price: "Rp 2.000.000",
    image: "/public/images/shoes-1.jpg",
    description: `Ini adalah sepatu baru dari brand adadong.`,
  },
];

const ProductsPage = () => {
  return (
    <div className="flex justify-center py-5">
      {products.map((product) => (
        <CardProduct>
          <CardProduct.Header image={product.image} />
          <CardProduct.Body name={product.name}>
            {product.description}
          </CardProduct.Body>
          <CardProduct.Footer price={product.price} />
        </CardProduct>
      ))}
    </div>
  );
};

export default ProductsPage;
----------------------------------------------------------------------------------------------------------------------
EVEN HANDLER :
   1. src/components/Fragments/FormLogin.jsx

      import Button from "../Elements/Button";
      import InputForm from "../Elements/Input";

      const FormLogin = () => {
        const handleLogin = (event) => {
          event.preventDefault();

          localStorage.setItem("email", event.target.email.value);
          localStorage.setItem("password", event.target.password.value);

          window.location.href = "/products";
        };

        return (
          <form onSubmit={handleLogin}>
            <InputForm
              label="Email"
              name="email"
              type="email"
              placeholder="example@mail.com"
            />
            <InputForm
              label="Password"
              name="password"
              type="password"
              placeholder="********"
            />
            <Button classname="bg-blue-600" type="submit">
              Login
            </Button>
          </form>
        );
      };

      export default FormLogin;

   2. src/pages/products.jsx

      import { Fragment } from "react";
      import CardProduct from "../components/Fragments/CardProduct";
      import Button from "../components/Elements/Button";

      const products = [
        {
          id: 1,
          name: "Sepatu Baru",
          price: "Rp 1.000.000",
          image: "/public/images/shoes-1.jpg",
          description: `Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis eveniet
            soluta numquam sapiente voluptatum labore, suscipit repellat. Quasi
            hic, labore quidem, esse mollitia laborum est, asperiores facilis
            repellat explicabo omnis?`,
        },
        {
          id: 2,
          name: "Sepatu Lama",
          price: "Rp 500.000",
          image: "/public/images/shoes-1.jpg",
          description: `Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis eveniet
            soluta numquam sapiente voluptatum labore.`,
        },
        {
          id: 3,
          name: "Sepatu Adadong",
          price: "Rp 2.000.000",
          image: "/public/images/shoes-1.jpg",
          description: `Ini adalah sepatu baru dari brand adadong.`,
        },
      ];

      const email = localStorage.getItem("email");

      const ProductsPage = () => {
        const handleLogout = () => {
          localStorage.removeItem("email");
          localStorage.removeItem("password");
          window.location.href = "/login";
        };

        return (
          <Fragment>
            <div className="flex justify-end h-20 bg-blue-600 text-white items-center px-10">
              {email}
              <Button classname="ml-5 bg-black" onClick={handleLogout}>
                Logout
              </Button>
            </div>
            <div className="flex justify-center py-5">
              {products.map((product) => (
                <CardProduct key={product.id}>
                  <CardProduct.Header image={product.image} />
                  <CardProduct.Body name={product.name}>
                    {product.description}
                  </CardProduct.Body>
                  <CardProduct.Footer price={product.price} />
                </CardProduct>
              ))}
            </div>
          </Fragment>
        );
      };

      export default ProductsPage;

   3. src/components/Elements/Button/index.jsx

      const Button = (props) => {
        const {
          children = "...",
          classname = "bg-black",
          onClick = () => {},
          type = "button",
        } = props;
        return (
          <button
            className={`h-10 px-6 font-semibold rounded-md ${classname} text-white`}
            type={type}
            onClick={() => onClick()}
          >
            {children}
          </button>
        );
      };

      export default Button;










